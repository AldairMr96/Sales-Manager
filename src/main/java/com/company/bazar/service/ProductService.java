package com.company.bazar.service;import com.company.bazar.model.Product;import com.company.bazar.repository.IProductRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.List;@Servicepublic class ProductService implements  IProductService{    @Autowired    IProductRepository productRepository;    @Override    public void createProduct(Product product) {        productRepository.save(product);    }    @Override    public List<Product> getProducts() {        List<Product> productList = productRepository.findAll();        return productList;    }    @Override    public Product findProduct(Long codProduct) {        return productRepository.findById(codProduct).                orElseThrow(()-> new RuntimeException("Product not found "));    }    @Override    public void deleteProduct(Long codProduct) {        if(!productRepository.existsById(codProduct)) {            throw  new RuntimeException("Product not found");        }        productRepository.deleteById(codProduct);    }    @Override    public void editProduct(Product product) {        Product productFound = this.findProduct(product.getCodProduct());        //Update        productFound.setNameProduct(product.getNameProduct());        productFound.setCost(product.getCost());        productFound.setStock(product.getStock());        productFound.setSaleList(product.getSaleList());        //Create new product        this.createProduct(product);    }    @Override    public List<Product> availableStock() {        List<Product> avaliableStock = new ArrayList<>();        for (Product product : getProducts()) {            if (product.getStock() <= 5){                avaliableStock.add(product);            }        }        return avaliableStock;    }}